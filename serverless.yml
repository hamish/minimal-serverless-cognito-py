# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sls-cognito-py

provider:
  name: aws
  runtime: python2.7
  stage: dev
  region: ap-southeast-2

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
    - Effect: "Allow"
      Action:
        - "cognito-identity:*"
        - "cognito-idp:*"
      Resource: 
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Scan
      Resource: arn:aws:dynamodb:*:*:table/Items
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource: arn:aws:s3:::smelt-dev-public
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:GetObject
        - s3:DeleteObject
        # - s3:*
      Resource: arn:aws:s3:::smelt-dev-public/*

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  home:
    handler: handler.home
    events:
      - http:
          path: sammple/home
          method: get
  secure:
    handler: handler.secure
    events:
      - http:
          path: sammple/secure
          method: get
  setup:
    handler: handler.setup
    events:
      - http:
          path: sammple/setup
          method: get
  signup:
    handler: handler.signup
    events:
      - http:
          path: sammple/signup
          method: get

  signupPost:
    handler: handler.signupPost
    events:
      - http:
          path: sammple/signup
          method: post

  verify:
    handler: handler.verify
    events:
      - http:
          path: sammple/verify
          method: get

  verifyPost:
    handler: handler.verifyPost
    events:
      - http:
          path: sammple/verify
          method: post

  login:
    handler: handler.login
    events:
      - http:
          path: sammple/login
          method: get

  loginPost:
    handler: handler.loginPost
    events:
      - http:
          path: sammple/login
          method: post
  logout:
    handler: handler.logout
    events:
      - http:
          path: sammple/logout
          method: get

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
